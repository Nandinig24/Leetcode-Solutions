class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        priority_queue<int>pq;
        for(int i=0;i<k;i++){
            pq.push(nums[i]);
            mp[nums[i]]++;
        }
        vector<int>ans;
        ans.push_back(pq.top());

        for(int i=k;i<nums.size();i++){
            int r=nums[i-k];
            mp[nums[i]]++;
            mp[nums[i-k]]--;
            pq.push(nums[i]);
            
            if(pq.top()==r ){
                while(mp[pq.top()]==0)
                    pq.pop();
                    ans.push_back(pq.top());
            }
            else {
                ans.push_back(pq.top());

            }
        }
return ans;

    }

};