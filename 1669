/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
    ListNode* p=list1;
        
        int k=0;
        while(k!=b){
            p=p->next;
            k++;
        }
        ListNode* q=p;
         p=p->next;
        q->next=NULL;
       
        
        int r=0;
       ListNode* w=list1;

        while(r!=(a-1)){
            w=w->next;
            r++;

        }
        w->next=NULL;
        w->next=list2;
       ListNode* t=list2;
        while(t->next!=NULL){
            t=t->next;
        }
t->next=p;
return list1;
        
    }
};