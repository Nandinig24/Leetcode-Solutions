class Solution {
public:

bool check(int start,int v,vector<vector<int>>& adj,int color[]){
    queue<int> q;
    q.push(start);
    color[start]=0;
    
    while(!q.empty()){
        int node=q.front();
        q.pop();

        for(auto i:adj[node]){
            if(color[i]==-1){
                color[i]=(!color[node]);
                q.push(i);
            }
            else if(color[i]==color[node])
            return false;
        }
    }
    return true;
}

 bool isBipartite(vector<vector<int>>& adj) {
        int v=adj.size();
    int color[v];

    for(int i=0;i<v;i++)
    color[i]=-1;

    for(int i=0;i<v;i++){
        if(color[i]==-1){
            if(check(i,v,adj,color)==false)
            return false;  // agr kisi comp ke lie false to false
        }
    }
return true;

}

};