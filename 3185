class Solution {
public:
    long long countCompleteDayPairs(vector<int>& hours) {
        unordered_map<int,int>mp;
        int c=0;
        int d=0;
        for(int i=0;i<hours.size();i++){
            hours[i]=(hours[i]%24);
            if(hours[i]==0)
                c++;
            else if(hours[i]==12)
                d++;
            else
            mp[hours[i]]++;
        }
        
        long long  ans=((c*1ll*(c-1))/2);
        ans+=((d*1ll*(d-1))/2);

        for(int i=1;i<12;i++){
            if(i!=12){
                ans+=(mp[i]*1ll*mp[24-i]);
            }
        }
        
//         for(auto i:mp)
//             cout<<i.first<<" "<<i.second<<endl;
        
        
//         for(auto i:mp){
//               int a=i.first;
//                 int p=24-a;
//                     ans+=(mp[p]*i.second);
//                     mp[p]=0;
//                 // }
//         }
        return ans;
        
    }
};
