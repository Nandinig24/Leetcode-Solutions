/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// int find(TreeNode* root){
//     int sum=0;

//     if(root==NULL)
//     return 0;
//     sum+=find(root->left);
//     if(root->left)
//      sum+=root->left->val;
//      sum+=find(root->right);

//     return sum;
// }
int find(TreeNode* root, bool isLeft) {
    if (root == nullptr)
        return 0;
    
    if (isLeft && root->left == nullptr && root->right == nullptr)
        return root->val;
    
    return find(root->left, true) + find(root->right, false);
}

int sumOfLeftLeaves(TreeNode* root) {
    return find(root, false);
}

};