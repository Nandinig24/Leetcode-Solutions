/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void preoder(TreeNode* root,vector<string>&v){
    if(root==NULL)
        return ;
       
        string p=to_string(root->val);
        v.push_back(p);
            //  v.push_back(")");
            if(root->left || root->right){
 v.push_back("(");
 preoder(root->left,v);
 v.push_back(")");
            }
            if(root->right){
 v.push_back("(");
    
preoder(root->right,v);
v.push_back(")");
            }

}
    string tree2str(TreeNode* root) {

vector<string> v;
preoder(root,v);
string r="",t="";
for(int i=0;i<v.size();i++)
r+=v[i];

return r;
        
    }
};