class Solution {
public:



void dfs(int node,vector<int>&vis,unordered_map<int,set<int>>&adj){
	vis[node]=1;
	for(int i:adj[node]){
		if(vis[i]==0)
		dfs(i,vis,adj);
	}
}
    int findCircleNum(vector<vector<int>>& v) {
        int n=v.size();
        unordered_map<int,set<int>>adj;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i!=j && v[i][j]==1){
                    adj[j].insert(i);
                    adj[i].insert(j);
                }
            }
        }
int count=0;
vector<int>vis(n,0);
// vis[0]=1;
		for(int i=0;i<n;i++){
			if(vis[i]==0)
			{
				dfs(i,vis,adj);
				count++;
			}
		}
        // if(adj.size()==0)
        // return n;

        // else

return count;
    }
};