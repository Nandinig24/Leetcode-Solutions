/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    // vector<pair<TreeNode*,pair<int>>v;
    //  vector<pair<TreeNode*,int>>w;
 unordered_map<TreeNode *,int>mp;

int ans=0;
    int g(TreeNode * root){
        if(root==NULL){
            return 0;
        }

        int vv=1+g(root->left)+g(root->right);
        if(mp[root]/vv==root->val){
            ans++;
        }
        return vv;

    }
    int f(TreeNode * root){
        if(root==NULL){
            return 0;
        }

        int val=root->val+f(root->left)+f(root->right);
        // v.push_back({root,val});
        mp.insert({root,val});
        return val;

    }
   
    int averageOfSubtree(TreeNode* root) {
        int aa=f(root);
        int bb=g(root);
        
        return ans;
    }
};