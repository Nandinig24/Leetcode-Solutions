class Solution {
public:
    int findWinningPlayer(vector<int>& skills, int k) {
        
        deque<int> dq(skills.begin(), skills.end());
        unordered_map<int,int>mp;
        
        for(int i=0;i<skills.size();i++){
            mp[skills[i]]=i;
        }
        
       
            
        int n = skills.size();
        if (k >= n - 1) {
            return max_element(skills.begin(), skills.end()) - skills.begin();
        }
        
        vector<int>v(skills.size(),0);
        while (true) {
            int a = dq.front();
            dq.pop_front();
            int b = dq.front();
            dq.pop_front();
            int winner = max(a, b);
            int loser = a + b - winner;
            
            v[mp[winner]]++;
            if (v[mp[winner]] == k) {
                return mp[winner];
            }

            dq.push_front(winner);
            dq.push_back(loser);
        }
        
      
    }
};

     